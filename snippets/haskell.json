{
	// Place your snippets for haskell here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Function": {
		"prefix": "fn",
		"body": [
			"$1 :: $2",
			"$1 = $3"
		]
	},
	"Case": {
		"prefix": "case",
		"body": [
			"case $1 of",
			"\t$2 -> $3"
		]
	},
	"If": {
		"prefix": "if",
		"body": [
			"if $1",
			"\tthen $2",
			"\telse $3"
		]
	},
	"Let": {
		"prefix": "let",
		"body": [
			"let",
			"\t$1 = $2"
		]
	},
	"Data": {
		"prefix": "data",
		"body": [
			"data $1",
			"\t= $2"
		]
	},
	"Newtype": {
		"prefix": "nut",
		"body": "newtype $1 = $1 { un$1 :: $2 }"
	},
	"Class": {
		"prefix": "class",
		"body": [
			"class $1 where",
			"\t$2"
		]
	}
}
